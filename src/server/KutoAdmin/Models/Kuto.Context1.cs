//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KutoAdmin.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KutoEntities : DbContext
    {
        public KutoEntities()
            : base("name=KutoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CustomerPics> CustomerPics { get; set; }
        public virtual DbSet<Business_Users> Business_Users { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
    
        public virtual int spAddImg(string image, Nullable<int> customerID, Nullable<int> businessUserID)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var businessUserIDParameter = businessUserID.HasValue ?
                new ObjectParameter("BusinessUserID", businessUserID) :
                new ObjectParameter("BusinessUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddImg", imageParameter, customerIDParameter, businessUserIDParameter);
        }
    
        public virtual int spEditImg(string image, ObjectParameter msg)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditImg", imageParameter, msg);
        }
    
        public virtual ObjectResult<Nullable<int>> spSignin(string username, string pwd, ObjectParameter returnvalue)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spSignin", usernameParameter, pwdParameter, returnvalue);
        }
    
        public virtual ObjectResult<spImgListforBusinessUser_Result1> spImgListforBusinessUser(Nullable<int> businessUserID, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter pageCount, ObjectParameter totalCount)
        {
            var businessUserIDParameter = businessUserID.HasValue ?
                new ObjectParameter("BusinessUserID", businessUserID) :
                new ObjectParameter("BusinessUserID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spImgListforBusinessUser_Result1>("spImgListforBusinessUser", businessUserIDParameter, pageIndexParameter, pageSizeParameter, pageCount, totalCount);
        }
    }
}
